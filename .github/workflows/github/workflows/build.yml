name: Music Player Build (Linux, macOS, Windows, Android, iOS)

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:

env:
  BUILD_NUMBER: 1
  BUILD_VERSION: 1.0.0
  PYTHON_VERSION: 3.12.2
  QT_VERSION: 6.6.1

jobs:
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libgl1-mesa-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install PyQt6==${{ env.QT_VERSION }}
        pip install pyinstaller

    - name: Build Linux application
      run: |
        pyinstaller --name music-player \
                   --onefile \
                   --windowed \
                   --add-data "assets:assets" \
                   src/main.py

    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: linux-build
        path: dist/music-player
        if-no-files-found: error

  build-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install PyQt6==${{ env.QT_VERSION }}
        pip install pyinstaller

    - name: Build macOS application
      run: |
        pyinstaller --name music-player \
                   --onefile \
                   --windowed \
                   --icon assets/icons/player.icns \
                   --add-data "assets:assets" \
                   src/main.py

    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: macos-build
        path: dist/music-player.app
        if-no-files-found: error

  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install PyQt6==${{ env.QT_VERSION }}
        pip install pyinstaller

    - name: Build Windows application
      run: |
        pyinstaller --name music-player `
                   --onefile `
                   --windowed `
                   --icon assets/icons/player.ico `
                   --add-data "assets;assets" `
                   src/main.py

    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: windows-build
        path: dist/music-player.exe
        if-no-files-found: error

  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Setup Java
      uses: actions/setup-java@v4.2.1
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install PyQt6==${{ env.QT_VERSION }}
        pip install buildozer

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git zip unzip openjdk-17-jdk python3-pip autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 cmake

    - name: Build Android APK
      run: |
        buildozer android debug

    - name: Upload Android artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: android-build
        path: bin/*.apk
        if-no-files-found: error

  build-ios:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install PyQt6==${{ env.QT_VERSION }}
        pip install pyinstaller

    - name: Build iOS package
      run: |
        # iOS build commands would go here
        # Note: PyQt6 doesn't directly support iOS builds
        # This is a placeholder for future iOS implementation
        echo "iOS build process would be implemented here"

    - name: Upload iOS artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: ios-build
        path: dist/ios
        if-no-files-found: warn

  create-release:
    needs: [build-linux, build-macos, build-windows, build-android]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ env.BUILD_VERSION }}
        name: Release v${{ env.BUILD_VERSION }}
        draft: true
        prerelease: false
        files: |
          linux-build/*
          macos-build/*
          windows-build/*
          android-build/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
